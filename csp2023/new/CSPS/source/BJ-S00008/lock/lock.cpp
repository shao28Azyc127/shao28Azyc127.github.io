#include <bits/stdc++.h>

using namespace std;

const int add[81][5] = {
    {1, 0, 0, 0, 0},
    {2, 0, 0, 0, 0},
    {3, 0, 0, 0, 0},
    {4, 0, 0, 0, 0},
    {5, 0, 0, 0, 0},
    {6, 0, 0, 0, 0},
    {7, 0, 0, 0, 0},
    {8, 0, 0, 0, 0},
    {9, 0, 0, 0, 0},
    {0, 1, 0, 0, 0},
    {0, 2, 0, 0, 0},
    {0, 3, 0, 0, 0},
    {0, 4, 0, 0, 0},
    {0, 5, 0, 0, 0},
    {0, 6, 0, 0, 0},
    {0, 7, 0, 0, 0},
    {0, 8, 0, 0, 0},
    {0, 9, 0, 0, 0},
    {0, 0, 1, 0, 0},
    {0, 0, 2, 0, 0},
    {0, 0, 3, 0, 0},
    {0, 0, 4, 0, 0},
    {0, 0, 5, 0, 0},
    {0, 0, 6, 0, 0},
    {0, 0, 7, 0, 0},
    {0, 0, 8, 0, 0},
    {0, 0, 9, 0, 0},
    {0, 0, 0, 1, 0},
    {0, 0, 0, 2, 0},
    {0, 0, 0, 3, 0},
    {0, 0, 0, 4, 0},
    {0, 0, 0, 5, 0},
    {0, 0, 0, 6, 0},
    {0, 0, 0, 7, 0},
    {0, 0, 0, 8, 0},
    {0, 0, 0, 9, 0},
    {0, 0, 0, 0, 1},
    {0, 0, 0, 0, 2},
    {0, 0, 0, 0, 3},
    {0, 0, 0, 0, 4},
    {0, 0, 0, 0, 5},
    {0, 0, 0, 0, 6},
    {0, 0, 0, 0, 7},
    {0, 0, 0, 0, 8},
    {0, 0, 0, 0, 9},
    {1, 1, 0, 0, 0},
    {2, 2, 0, 0, 0},
    {3, 3, 0, 0, 0},
    {4, 4, 0, 0, 0},
    {5, 5, 0, 0, 0},
    {6, 6, 0, 0, 0},
    {7, 7, 0, 0, 0},
    {8, 8, 0, 0, 0},
    {9, 9, 0, 0, 0},
    {0, 1, 1, 0, 0},
    {0, 2, 2, 0, 0},
    {0, 3, 3, 0, 0},
    {0, 4, 4, 0, 0},
    {0, 5, 5, 0, 0},
    {0, 6, 6, 0, 0},
    {0, 7, 7, 0, 0},
    {0, 8, 8, 0, 0},
    {0, 9, 9, 0, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 2, 2, 0},
    {0, 0, 3, 3, 0},
    {0, 0, 4, 4, 0},
    {0, 0, 5, 5, 0},
    {0, 0, 6, 6, 0},
    {0, 0, 7, 7, 0},
    {0, 0, 8, 8, 0},
    {0, 0, 9, 9, 0},
    {0, 0, 0, 1, 1},
    {0, 0, 0, 2, 2},
    {0, 0, 0, 3, 3},
    {0, 0, 0, 4, 4},
    {0, 0, 0, 5, 5},
    {0, 0, 0, 6, 6},
    {0, 0, 0, 7, 7},
    {0, 0, 0, 8, 8},
    {0, 0, 0, 9, 9}
};

int n;
int password[8][5];
int ans[5];
int cnt;

void dfs(int x) {
    if (x == n) {
        cnt++;
        return ;
    }

    int tempans[5];

    for (int i = 0; i < 81; i++) {
        tempans[0] = (password[x][0] + add[i][0]) % 10;

        if (x == 0) {
            ans[0] = tempans[0];
        } else if (tempans[0] != ans[0]) {
            continue;
        }

        tempans[1] = (password[x][1] + add[i][1]) % 10;

        if (x == 0) {
            ans[1] = tempans[1];
        } else if (tempans[1] != ans[1]) {
            continue;
        }

        tempans[2] = (password[x][2] + add[i][2]) % 10;

        if (x == 0) {
            ans[2] = tempans[2];
        } else if (tempans[2] != ans[2]) {
            continue;
        }

        tempans[3] = (password[x][3] + add[i][3]) % 10;

        if (x == 0) {
            ans[3] = tempans[3];
        } else if (tempans[3] != ans[3]) {
            continue;
        }

        tempans[4] = (password[x][4] + add[i][4]) % 10;

        if (x == 0) {
            ans[4] = tempans[4];
        } else if (tempans[4] != ans[4]) {
            continue;
        }

        dfs(x + 1);
    }
}

int main() {
    freopen("lock.in", "r", stdin);
    freopen("lock.out", "w", stdout);

    cin >> n ;

    for (int i = 0; i < n; i++) {
        cin >> password[i][0] >> password[i][1] >> password[i][2] >> password[i][3] >> password[i][4] ;
    }

    dfs(0);

    cout << cnt << endl;

    fclose(stdin);
    fclose(stdout);

    return 0;
}
